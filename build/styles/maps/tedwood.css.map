{"version":3,"sources":["tedwood.scss","components/_variables.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"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","file":"../tedwood.css","sourcesContent":["//variables\n@import \"./components/variables\";\n//bootstrap components\n@import \"../../node_modules/bootstrap/scss/functions\";\n@import \"../../node_modules/bootstrap/scss/variables\";\n@import \"../../node_modules/bootstrap/scss/mixins/breakpoints\";\n\n\n.tedwood-tools {\n  margin-top: 30px;\n  &__item {\n    .image {\n      position: absolute;\n      width: calc(50% - 20px);\n      height: calc(100% - 20px);\n      top: 10px;\n      right: 20px;\n      transition: transform $trs1;\n      img {\n        object-position: center right;\n      }\n    }\n    ul {\n      li {\n        &:not(:last-child) {\n          margin-bottom: 0.5rem;\n        }\n      }\n    }\n    &_1 {\n      .image {\n        top: 0;\n        height: auto;\n        width: 60%;\n        &::before {\n          content: '';\n          display: block;\n          padding-top: 103%;\n        }\n      }\n    }\n    &_2 {\n      .image {\n        margin-top: 20px;\n        position: relative;\n        top: initial;\n        right: initial;\n        width: 50%;\n        height: auto;\n        margin-left: 30px;\n        &::before {\n          content: '';\n          display: block;\n          padding-top: 16%;\n        }\n      }\n    }\n    &_3 {\n      .image {\n        width: calc(40% - 20px);\n        height: auto;\n        &::before {\n          content: '';\n          display: block;\n          padding-top: 63%;\n        }\n      }\n    }\n  }\n  &__item-container {\n    background-color: #f2f2f2;\n    position: relative;\n    padding: 30px 0 20px 0;\n    height: 100%;\n    min-height: 100px;\n    transition: transform $trs1, box-shadow $trs1;\n    overflow: hidden;\n    &[data-touch], &[data-hover] {\n      transform: translateY(-3px);\n      box-shadow: 0px 4px 7px #dedede;\n      .image {\n        transform: translateY(-3px);\n      }\n    }\n  }\n  &__item-title {\n    margin: 0;\n    &:not(:last-child) {\n      margin: 0 0 4px 0;\n    }\n    &_type-2 {\n      &:not(:last-child) {\n        margin: 0 0 15px 0;\n      }\n    }\n  }\n  &__item-text {\n    width: 50%;\n    padding: 0 20px 0 30px;\n    &_1 {\n      width: 60%;\n    }\n    &_2 {\n      width: 100%;\n    }\n    &_3 {\n      width: 60%;\n    }\n  }\n  @include media-breakpoint-down(sm) {\n    &__item-container {\n      padding: 16px 0;\n    }\n    &__item-text {\n      padding: 0 16px;\n    }\n  }\n}\n\n.tedwood-steps {\n  margin-top: 60px;\n  &__item {\n    display: flex;\n    position: relative;\n    &:not(:last-child) {\n      margin-bottom: 60px;\n    }\n  }\n  &__item-index {\n    font-size: 350px;\n    position: absolute;\n    font-weight: 700;\n    line-height: 0.8;\n    transform: translateY(-0.08em);\n    opacity: 0.5;\n    &:first-child {\n      left: -0.035em;\n    }\n    &:last-child {\n      right: -0.035em;\n    }\n  }\n  &__item-text {\n    flex: 1 1 60%;\n    position: relative;\n    z-index: 2;\n  }\n  &__item-image {\n    flex: 0 0 40%;\n    height: 245px;\n    position: relative;\n    z-index: 2;\n  }\n  @include media-breakpoint-up(lg) {\n    &__item-index {\n      & + .tedwood-steps__item-text {\n        padding-left: 90px;\n        padding-right: 30px;\n      }\n    }\n    &__item-image {\n      & + .tedwood-steps__item-text {\n        padding-left: 30px;\n        padding-right: 90px;\n      }\n    }\n  }\n  @include media-breakpoint-down(lg) {\n    &__item {\n      display: flex;\n      flex-direction: column;\n    }\n    &__item-text {\n      order: 2;\n      padding-left: 130px;\n    }\n    &__item-image {\n      flex: 0 0 300px;\n      margin-bottom: 20px;\n    }\n    &__item-index {\n      top: 327px;\n      font-size: 200px;\n      &:last-child {\n        left: -0.035em;\n        right: initial;\n      }\n    }\n  }\n  @include media-breakpoint-down(sm) {\n    margin-top: 40px;\n    &__item-image {\n      flex: 0 0 200px;\n    }\n    &__item-index {\n      top: 225px;\n      font-size: 100px;\n    }\n    &__item-text {\n      padding-left: 70px;\n    }\n    &__item {\n      &:not(:last-child) {\n        margin-bottom: 40px;\n      }\n    }\n  }\n}\n\n.tedwood-head {\n  background-color: #f2f2f2;\n  padding: 60px 0;\n  margin-top: -30px;\n  color: #333;\n  position: relative;\n  .container {\n    position: relative;\n    z-index: 2;\n  }\n  &__background {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: transparent;\n    max-width: 1920px;\n    img {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      left: 0;\n      top: 0;\n    }\n    &_style-1 {\n      height: 78%;\n      top: 22%;\n      img {\n        object-fit: contain;\n        object-position: right bottom;\n      }\n    }\n    &_style-2 {\n      left: 55%;\n      img {\n        object-fit: cover;\n        object-position: center center;\n      }\n    }\n  }\n  &__sub-title {\n    font-size: 30px;\n    line-height: 1;\n    font-weight: 400;\n    margin-bottom: 15px;\n    color: inherit;\n  }\n  &__title {\n    font-weight: 900;\n    font-size: 72px;\n    line-height: 1;\n    margin-bottom: 45px;\n    margin-top: 0;\n  }\n  &__list {\n    margin: 0;\n    list-style: none;\n    padding: 0;\n  }\n  &__item {\n    padding: 0 0 0 3em;\n    position: relative;\n    font-weight: 900;\n    font-size: 24px;\n    line-height: 1.16;\n    &:not(:last-child) {\n      margin-bottom: 30px;\n    }\n    .icon {\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 2em;\n      height: 2em;\n      display: block;\n    }\n  }\n  @include media-breakpoint-down(xl) {\n    &__sub-title {\n      font-size: 20px;\n    }\n    &__title {\n      font-size: 42px;\n    }\n    &__item {\n      font-size: 20px;\n    }\n  }\n  @include media-breakpoint-down(lg) {\n    &__background {\n      &_style-1 {\n        left: 60%;\n      }\n      &_style-2 {\n        left: 62%;\n      }\n    }\n  }\n  @include media-breakpoint-down(md) {\n    &__background {\n      &_style-1 {\n        left: 50%;\n        margin-bottom: -60px;\n        margin-top: 20px;\n        width: 1060px;\n        top: initial;\n        position: relative;\n        transform: translateX(-68%);\n        &::before {\n          content: '';\n          display: block;\n          padding-top: 28.125%;\n        }\n      }\n      &_style-2 {\n        left: 50%;\n        margin-bottom: -60px;\n        margin-top: 40px;\n        width: 1200px;\n        top: initial;\n        position: relative;\n        transform: translateX(-65%);\n        &::before {\n          content: '';\n          display: block;\n          padding-top: 32%;\n        }\n      }\n    }\n  }\n  @include media-breakpoint-down(sm) {\n    padding: 40px 0;\n    &__sub-title {\n      font-size: 16px;\n      margin-bottom: 10px;\n    }\n    &__title {\n      font-size: 32px;\n      margin-bottom: 35px;\n    }\n    &__item {\n      font-size: 16px;\n      &:not(:last-child) {\n        margin-bottom: 25px;\n      }\n    }\n    &__background {\n      &_style-1 {\n        left: 49%;\n        width: 193%;\n        margin-bottom: -40px;\n      }\n    }\n  }\n}\n\n.tedwood-image-block {\n  display: flex;\n  background-color: #f2f2f2;\n  &__text {\n    flex: 1 1 50%;\n    padding: 60px;\n  }\n  &__image {\n    flex: 1 1 50%;\n  }\n  @include media-breakpoint-down(lg) {\n    &__text {\n      padding: 40px;\n    }\n  }\n  @include media-breakpoint-down(md) {\n    &__text {\n      padding: 30px 20px;\n    }\n  }\n  @include media-breakpoint-down(sm) {\n    flex-direction: column;\n    &__image {\n      flex: 0 0 200px;\n    }\n    &__image {\n      order: 2;\n    }\n  }\n}\n\n.tedwood-technology {\n  color: #fff;\n  &__container {\n    display: flex;\n  }\n  &__title {\n    color: inherit;\n  }\n  &__image {\n    flex: 1 1 45%;\n    &::before {\n      content: '';\n      display: block;\n      padding-top: 80%;\n    }\n  }\n  &__content {\n    flex: 1 1 55%;\n    padding-left: 60px;\n  }\n  &__item {\n    padding-left: 60px;\n    position: relative;\n    .icon {\n      width: 40px;\n      height: 40px;\n      position: absolute;\n      left: 0;\n      top: 5px;\n    }\n    &:not(:last-child) {\n      margin-bottom: 30px;\n    }\n  }\n  @include media-breakpoint-down(lg) {\n    &__container {\n      display: block;\n    }\n    &__image {\n      max-width: 400px;\n      margin: 0 auto;\n    }\n    &__content {\n      padding: 30px 0 0 0;\n    }\n  }\n}\n\n.tedwood-benefits {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 60px;\n  row-gap: 30px;\n  margin-bottom: 30px;\n  &__item {\n    padding-left: 60px;\n    position: relative;\n    .icon {\n      width: 40px;\n      height: 40px;\n      position: absolute;\n      left: 0;\n      top: 5px;\n    }\n  }\n  @include media-breakpoint-down(xl) {\n    column-gap: 30px;\n  }\n  @include media-breakpoint-down(lg) {\n    grid-template-columns: 1fr;\n  }\n}","$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 1024px,\n  xl: 1280px,\n  xxl: 1600px\n);\n\n$container-max-widths: (\n  sm: 540px,\n  md: 720px,\n  lg: 960px,\n  xl: 1212px\n);\n\n$spacers: (\n  grid: var(--grid-gutter-width),\n  0: 0,\n  10: 10px,\n  15: 15px,\n  20: 20px,\n  25: 25px,\n  30: 30px,\n  35: 35px,\n  40: 40px,\n  45: 45px,\n  50: 50px\n);\n\n$grid-gutter-width: var(--grid-gutter-width);\n$container-padding-x: var(--container-padding-x);\n$card-group-margin: $grid-gutter-width;\n\n$rfs-unit: px;\n\n\n$trs1: .15s ease-out;\n$trs2: .25s ease-out;\n$trs3: 1s ease-out;\n\n$shadow: 0px 2px 25px rgba(118, 118, 118, 0.15);\n\n$font2: 'Russo One';","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}